//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExamWeb.JobPostingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobPostingDTO", Namespace="http://schemas.datacontract.org/2004/07/ExamWCF.DTOs")]
    [System.SerializableAttribute()]
    public partial class JobPostingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Web.Mvc.SelectListItem[] AttachmentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EmploymentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Web.Mvc.SelectListItem[] EmploymentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MinimumExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Web.Mvc.SelectListItem[] SkillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCandidatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Web.Mvc.SelectListItem[] AttachmentTypes {
            get {
                return this.AttachmentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentTypesField, value) != true)) {
                    this.AttachmentTypesField = value;
                    this.RaisePropertyChanged("AttachmentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EmploymentTypeID {
            get {
                return this.EmploymentTypeIDField;
            }
            set {
                if ((this.EmploymentTypeIDField.Equals(value) != true)) {
                    this.EmploymentTypeIDField = value;
                    this.RaisePropertyChanged("EmploymentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Web.Mvc.SelectListItem[] EmploymentTypes {
            get {
                return this.EmploymentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.EmploymentTypesField, value) != true)) {
                    this.EmploymentTypesField = value;
                    this.RaisePropertyChanged("EmploymentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsClosed {
            get {
                return this.IsClosedField;
            }
            set {
                if ((this.IsClosedField.Equals(value) != true)) {
                    this.IsClosedField = value;
                    this.RaisePropertyChanged("IsClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((this.JobIDField.Equals(value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MinimumExperience {
            get {
                return this.MinimumExperienceField;
            }
            set {
                if ((this.MinimumExperienceField.Equals(value) != true)) {
                    this.MinimumExperienceField = value;
                    this.RaisePropertyChanged("MinimumExperience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Web.Mvc.SelectListItem[] Skills {
            get {
                return this.SkillsField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillsField, value) != true)) {
                    this.SkillsField = value;
                    this.RaisePropertyChanged("Skills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCandidates {
            get {
                return this.TotalCandidatesField;
            }
            set {
                if ((this.TotalCandidatesField.Equals(value) != true)) {
                    this.TotalCandidatesField = value;
                    this.RaisePropertyChanged("TotalCandidates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobPostingService.IJobPostingService")]
    public interface IJobPostingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobPostings", ReplyAction="http://tempuri.org/IJobPostingService/GetJobPostingsResponse")]
        ExamWeb.JobPostingService.JobPostingDTO[] GetJobPostings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobPostings", ReplyAction="http://tempuri.org/IJobPostingService/GetJobPostingsResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobPostingDTO[]> GetJobPostingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobPostingByID", ReplyAction="http://tempuri.org/IJobPostingService/GetJobPostingByIDResponse")]
        ExamWeb.JobPostingService.JobPostingDTO GetJobPostingByID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/GetJobPostingByID", ReplyAction="http://tempuri.org/IJobPostingService/GetJobPostingByIDResponse")]
        System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobPostingDTO> GetJobPostingByIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/InsertJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/InsertJobPostingResponse")]
        void InsertJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPostingDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/InsertJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/InsertJobPostingResponse")]
        System.Threading.Tasks.Task InsertJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPostingDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/UpdateJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/UpdateJobPostingResponse")]
        void UpdateJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPostingDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/UpdateJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/UpdateJobPostingResponse")]
        System.Threading.Tasks.Task UpdateJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPostingDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/DeleteJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/DeleteJobPostingResponse")]
        void DeleteJobPosting(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobPostingService/DeleteJobPosting", ReplyAction="http://tempuri.org/IJobPostingService/DeleteJobPostingResponse")]
        System.Threading.Tasks.Task DeleteJobPostingAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobPostingServiceChannel : ExamWeb.JobPostingService.IJobPostingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobPostingServiceClient : System.ServiceModel.ClientBase<ExamWeb.JobPostingService.IJobPostingService>, ExamWeb.JobPostingService.IJobPostingService {
        
        public JobPostingServiceClient() {
        }
        
        public JobPostingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobPostingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobPostingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobPostingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ExamWeb.JobPostingService.JobPostingDTO[] GetJobPostings() {
            return base.Channel.GetJobPostings();
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobPostingDTO[]> GetJobPostingsAsync() {
            return base.Channel.GetJobPostingsAsync();
        }
        
        public ExamWeb.JobPostingService.JobPostingDTO GetJobPostingByID(System.Guid id) {
            return base.Channel.GetJobPostingByID(id);
        }
        
        public System.Threading.Tasks.Task<ExamWeb.JobPostingService.JobPostingDTO> GetJobPostingByIDAsync(System.Guid id) {
            return base.Channel.GetJobPostingByIDAsync(id);
        }
        
        public void InsertJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPostingDTO) {
            base.Channel.InsertJobPosting(jobPostingDTO);
        }
        
        public System.Threading.Tasks.Task InsertJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPostingDTO) {
            return base.Channel.InsertJobPostingAsync(jobPostingDTO);
        }
        
        public void UpdateJobPosting(ExamWeb.JobPostingService.JobPostingDTO jobPostingDTO) {
            base.Channel.UpdateJobPosting(jobPostingDTO);
        }
        
        public System.Threading.Tasks.Task UpdateJobPostingAsync(ExamWeb.JobPostingService.JobPostingDTO jobPostingDTO) {
            return base.Channel.UpdateJobPostingAsync(jobPostingDTO);
        }
        
        public void DeleteJobPosting(System.Guid id) {
            base.Channel.DeleteJobPosting(id);
        }
        
        public System.Threading.Tasks.Task DeleteJobPostingAsync(System.Guid id) {
            return base.Channel.DeleteJobPostingAsync(id);
        }
    }
}
